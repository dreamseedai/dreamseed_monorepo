#!/bin/bash
# Cloudflare CIDR 자동 동기화 스크립트
# 목적: Cloudflare IP 범위를 자동으로 다운로드하여 nginx real_ip 설정에 적용

set -euo pipefail

# 색상 정의
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# 설정
CF_V4_URL="https://www.cloudflare.com/ips-v4"
CF_V6_URL="https://www.cloudflare.com/ips-v6"
OUT_DIR="/etc/nginx/conf.d"
OUT_FILE="$OUT_DIR/real_ip_cloudflare.conf"
TMP_DIR=$(mktemp -d)
TMP_FILE="$TMP_DIR/real_ip_cloudflare.conf.tmp"
LOCK_FILE="/var/run/update_cloudflare_real_ip.lock"

# 선택적 플래그
KEEP_LOCAL="yes"  # set_real_ip_from 127.0.0.1 유지

log_info "=== Cloudflare CIDR 자동 동기화 시작 ==="
log_info "IPv4 URL: $CF_V4_URL"
log_info "IPv6 URL: $CF_V6_URL"
log_info "출력 파일: $OUT_FILE"

# 락 파일로 중복 실행 방지
exec 9>"$LOCK_FILE" || true
if ! flock -n 9; then
    log_warning "다른 업데이트가 진행 중입니다. 종료합니다."
    exit 0
fi

# 출력 디렉토리 생성
mkdir -p "$OUT_DIR"

# IP 목록 가져오기 함수
fetch_ips() {
    local url="$1"
    local name="$2"
    
    log_info "$name IP 목록 가져오는 중..."
    if curl -fsSL "$url" | awk 'NF {print $0}'; then
        log_success "$name IP 목록 가져오기 성공"
    else
        log_error "$name IP 목록 가져오기 실패"
        return 1
    fi
}

# CIDR 유효성 검사
validate_cidr() {
    # 매우 느슨한 검증: IPv4/IPv6 CIDR 형태인지 확인
    grep -E -i '^(([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}|[0-9a-f:]+/[0-9]{1,3})$' || true
}

# IPv4 및 IPv6 IP 목록 가져오기
log_info "1. Cloudflare IP 목록 가져오는 중..."
V4=$(fetch_ips "$CF_V4_URL" "IPv4" | validate_cidr)
V6=$(fetch_ips "$CF_V6_URL" "IPv6" | validate_cidr)

# IP 목록이 비어있는지 확인
if [ -z "$V4" ] && [ -z "$V6" ]; then
    log_error "Cloudflare IP 목록을 가져오는데 실패했습니다"
    exit 1
fi

# IPv4 개수 확인
V4_COUNT=$(echo "$V4" | wc -l)
V6_COUNT=$(echo "$V6" | wc -l)
log_info "가져온 IP 범위: IPv4 $V4_COUNT개, IPv6 $V6_COUNT개"

# nginx 설정 파일 생성
log_info "2. nginx 설정 파일 생성 중..."
{
    echo "# Auto-generated by update_cloudflare_real_ip.sh on $(date -u +%FT%TZ)"
    echo "# Source: $CF_V4_URL, $CF_V6_URL"
    echo "# Total ranges: IPv4 $V4_COUNT, IPv6 $V6_COUNT"
    echo ""
    
    if [ "$KEEP_LOCAL" = "yes" ]; then
        echo "# Local proxy (keep existing)"
        echo "set_real_ip_from 127.0.0.1;"
        echo ""
    fi
    
    if [ -n "$V4" ]; then
        echo "# Cloudflare IPv4 ranges"
        echo "$V4" | awk '{printf("set_real_ip_from %s;\n", $0)}'
        echo ""
    fi
    
    if [ -n "$V6" ]; then
        echo "# Cloudflare IPv6 ranges"
        echo "$V6" | awk '{printf("set_real_ip_from %s;\n", $0)}'
    fi
} > "$TMP_FILE"

# 파일 내용이 변경되었는지 확인
log_info "3. 변경 사항 확인 중..."
NEED_UPDATE=1
if [ -f "$OUT_FILE" ]; then
    if sha256sum "$OUT_FILE" "$TMP_FILE" | awk '{print $1}' | uniq -d | grep -q .; then
        NEED_UPDATE=0
        log_info "변경 사항이 없습니다"
    else
        log_info "변경 사항이 감지되었습니다"
    fi
else
    log_info "기존 파일이 없습니다. 새로 생성합니다"
fi

# nginx 설정 업데이트
if [ "$NEED_UPDATE" -eq 1 ]; then
    log_info "4. nginx 설정 업데이트 중..."
    
    # 원자적으로 파일 교체
    cp -af "$TMP_FILE" "$OUT_FILE"
    
    # nginx 설정 검증
    if nginx -t; then
        systemctl reload nginx
        log_success "✅ nginx 설정 업데이트 및 재로드 완료"
        log_success "   파일: $OUT_FILE"
        log_success "   IPv4 범위: $V4_COUNT개"
        log_success "   IPv6 범위: $V6_COUNT개"
    else
        log_error "❌ nginx 설정 검증 실패. 변경사항을 되돌립니다"
        # 이전 파일이 있다면 복원
        if [ -f "${OUT_FILE}.bak" ]; then
            cp -af "${OUT_FILE}.bak" "$OUT_FILE"
            log_info "이전 설정으로 복원됨"
        fi
        exit 1
    fi
else
    log_info "Cloudflare CIDR 변경사항이 없습니다. nginx 재로드가 필요하지 않습니다"
fi

# 백업 파일 생성
if [ "$NEED_UPDATE" -eq 1 ]; then
    cp -af "$OUT_FILE" "${OUT_FILE}.bak"
    log_info "백업 파일 생성: ${OUT_FILE}.bak"
fi

# 임시 파일 정리
rm -rf "$TMP_DIR" || true

# 보안 경고
echo ""
log_warning "🔒 보안 주의사항:"
echo "   • set_real_ip_from에 외부 CIDR을 추가하면 X-Forwarded-For 신뢰 범위가 넓어집니다"
echo "   • Cloudflare 뒤에 놓인 서버에서만 사용하세요"
echo "   • 직접 접속이 가능한 환경이면 방화벽으로 원 서버에 직접 접근을 차단하세요"
echo "   • real_ip_recursive on과 함께 신뢰 범위를 최소화하세요"

log_success "Cloudflare CIDR 자동 동기화 완료!"
