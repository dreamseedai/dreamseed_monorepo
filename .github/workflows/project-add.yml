name: Add Issues/PRs to Project v2 (DreamSeed)

on:
  issues:
    types: [opened, labeled]
  pull_request:
    types: [opened, labeled, ready_for_review]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: read
      projects: write
    concurrency:
      group: project-add-${{ github.event_name }}-${{ github.event.issue.number || github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - name: Resolve Project (DreamSeed) node ID (org or user)
        id: proj
        uses: actions/github-script@v7
        with:
          script: |
            const owner = "mpcstudy";  // 사용자 또는 조직 로그인
            const title = "DreamSeed"; // Project v2 이름
            const q = `
              query($login:String!) {
                organization(login:$login) { projectsV2(first:100) { nodes { id title } } }
                user(login:$login)         { projectsV2(first:100) { nodes { id title } } }
              }
            `;
            const res = await github.graphql(q, { login: owner });
            const orgNodes  = res.organization?.projectsV2?.nodes || [];
            const userNodes = res.user?.projectsV2?.nodes || [];
            const nodes = [...orgNodes, ...userNodes];
            const proj = nodes.find(n => n.title === title);
            if (!proj) {
              core.setFailed(`Project v2 '${title}' not found for login '${owner}'.`);
            } else {
              core.setOutput("project_id", proj.id);
            }

      - name: Add Issue to Project
        if: ${{ github.event_name == 'issues' }}
        uses: actions/github-script@v7
        with:
          script: |
            const projectId = "${{ steps.proj.outputs.project_id }}";
            const contentId = context.payload.issue.node_id;
            const m = `
              mutation($projectId:ID!, $contentId:ID!) {
                addProjectV2ItemById(input:{projectId:$projectId, contentId:$contentId}) {
                  item { id }
                }
              }
            `;
            await github.graphql(m, { projectId, contentId });

      - name: Add PR to Project
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const projectId = "${{ steps.proj.outputs.project_id }}";
            const contentId = context.payload.pull_request.node_id;
            const m = `
              mutation($projectId:ID!, $contentId:ID!) {
                addProjectV2ItemById(input:{projectId:$projectId, contentId:$contentId}) {
                  item { id }
                }
              }
            `;
            await github.graphql(m, { projectId, contentId });
