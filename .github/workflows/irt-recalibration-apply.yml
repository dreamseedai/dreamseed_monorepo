name: IRT Recalibration Apply

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  apply:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'IRT calibration preview')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install psycopg2-binary

      - name: Install R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.3'

      - name: Promote shadow parameters to primary
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          # Promote from item_bank_shadow into questions table
          python tools/calibration/promote_shadow.py --to questions

      - name: Verify promotion (sample)
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          python - << 'PY'
          import os, random, psycopg2
          url=os.getenv('DATABASE_URL')
          con=psycopg2.connect(url)
          try:
              with con.cursor() as cur:
                  cur.execute("SELECT id FROM item_bank_shadow")
                  ids=[r[0] for r in cur.fetchall()]
                  if not ids:
                      print('No items in shadow; skipping verification')
                  else:
                      sample=random.sample(ids, min(25, len(ids)))
                      mismatches=0
                      for iid in sample:
                          cur.execute("SELECT irt_a,irt_b,irt_c FROM item_bank_shadow WHERE id=%s", (iid,))
                          sa,sb,sc=cur.fetchone()
                          cur.execute("SELECT irt_a,irt_b,irt_c FROM questions WHERE id=%s", (iid,))
                          qa,qb,qc=cur.fetchone() or (None,None,None)
                          if not (abs((sa or 0)-(qa or 0))<1e-6 and abs((sb or 0)-(qb or 0))<1e-6 and abs((sc or 0)-(qc or 0))<1e-6):
                              mismatches+=1
                      print(f'Verification sample size={len(sample)}, mismatches={mismatches}')
                      with open('VERIFY_SUMMARY.md','w') as f:
                          f.write('## Post-promotion Verification\n')
                          f.write(f'Sample size: {len(sample)}\\n')
                          f.write(f'Mismatches: {mismatches}\\n')
                      if mismatches>0:
                          raise SystemExit('Promotion verification failed')
          finally:
              con.close()
          PY

      - name: Comment verification on PR
        if: ${{ hashFiles('VERIFY_SUMMARY.md') != '' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body-file: VERIFY_SUMMARY.md
