name: Update Branch Protection

on:
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to protect
        required: true
        default: main
      checks:
        description: Comma-separated required checks (exact job names)
        required: true
        default: Next Build
      enforce_admins:
        description: Enforce for administrators (true/false)
        required: true
        default: 'true'

permissions:
  contents: read

concurrency:
  group: update-branch-protection-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update:
    name: Update Branch Protection
    runs-on: ubuntu-latest
    steps:
      - name: Validate admin token
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: |
          if [ -z "$ADMIN_TOKEN" ]; then
            echo "secrets.ADMIN_TOKEN is required and must have 'repo' admin permissions."
            exit 1
          fi

      - name: Update protection via GitHub API
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          BRANCH: ${{ github.event.inputs.branch }}
          CHECKS: ${{ github.event.inputs.checks }}
          ENFORCE_ADMINS: ${{ github.event.inputs.enforce_admins }}
        run: |
          set -euo pipefail
          owner_repo="${GITHUB_REPOSITORY}"
          contexts=$(jq -R -s 'split(",") | map(. | gsub("^\\s+|\\s+$";""))' <<< "$CHECKS")
          enforce=$(jq -n --arg s "$ENFORCE_ADMINS" '$s == "true"')
          body=$(jq -n --argjson contexts "$contexts" --argjson enforce "$enforce" '{
            required_status_checks: { strict: true, contexts: $contexts },
            enforce_admins: $enforce,
            required_pull_request_reviews: null,
            restrictions: null
          }')
          echo "Request body:" && echo "$body" | jq .
          gh api -X PUT \
            -H "Accept: application/vnd.github+json" \
            "repos/$owner_repo/branches/$BRANCH/protection" \
            --input - <<< "$body"

      - name: Show protection settings
        env:
          GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          BRANCH: ${{ github.event.inputs.branch }}
        run: |
          gh api -H "Accept: application/vnd.github+json" \
            "repos/${GITHUB_REPOSITORY}/branches/$BRANCH/protection" | jq .
