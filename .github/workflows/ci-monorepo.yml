name: CI (Monorepo)

on:
  pull_request:
  push:
    branches: [main]

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Detect changed packages
        id: set
        run: |
          # Get changed files
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          else
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          fi

          echo "Changed files: $CHANGED_FILES"

          # Detect changed packages
          CHANGED_PACKAGES=()

          # Check apps
          if echo "$CHANGED_FILES" | grep -q "^apps/"; then
            for app in apps/*/; do
              if [ -d "$app" ]; then
                app_name=$(basename "$app")
                if echo "$CHANGED_FILES" | grep -q "^apps/$app_name/"; then
                  CHANGED_PACKAGES+=("apps/$app_name")
                fi
              fi
            done
          fi

          # Check packages
          if echo "$CHANGED_FILES" | grep -q "^packages/"; then
            for pkg in packages/*/; do
              if [ -d "$pkg" ]; then
                pkg_name=$(basename "$pkg")
                if echo "$CHANGED_FILES" | grep -q "^packages/$pkg_name/"; then
                  CHANGED_PACKAGES+=("packages/$pkg_name")
                fi
              fi
            done
          fi

          # Check root changes (affects all packages)
          if echo "$CHANGED_FILES" | grep -qE "^(package\.json|pnpm-workspace\.yaml|\.changeset/|\.github/)"; then
            CHANGED_PACKAGES=("apps/portal-front" "apps/portal-api" "packages/shared-types" "packages/shared-utils")
          fi

          # Fallback: if no packages detected, run all
          if [ ${#CHANGED_PACKAGES[@]} -eq 0 ]; then
            CHANGED_PACKAGES=("apps/portal-front" "apps/portal-api" "packages/shared-types" "packages/shared-utils")
          fi

          # Create matrix
          MATRIX=$(printf '%s\n' "${CHANGED_PACKAGES[@]}" | jq -R . | jq -s .)
          echo "matrix={\"package\":$MATRIX}" >> $GITHUB_OUTPUT
          echo "Changed packages: ${CHANGED_PACKAGES[*]}"

  build-test:
    needs: detect
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ matrix.package }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Type check
        run: pnpm type-check --if-present
        continue-on-error: true

      - name: Lint
        run: pnpm lint --if-present
        continue-on-error: true

      - name: Build
        run: pnpm build --if-present
        continue-on-error: true

      - name: Test
        run: pnpm test --if-present
        continue-on-error: true

      - name: Upload build artifacts
        if: matrix.package == 'apps/portal-front' && success()
        uses: actions/upload-artifact@v4
        with:
          name: portal-front-build
          path: apps/portal-front/dist/
          retention-days: 1

  integration-test:
    needs: build-test
    runs-on: ubuntu-latest
    if: contains(needs.detect.outputs.matrix, 'apps/portal-api')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        working-directory: apps/portal_api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run API tests
        working-directory: apps/portal_api
        run: |
          python -m pytest tests/ -v
        continue-on-error: true
