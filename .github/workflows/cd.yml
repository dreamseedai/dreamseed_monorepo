name: DreamSeed CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # 스테이징 배포
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure deployment
        run: |
          echo "STAGING_DEPLOYMENT=true" >> $GITHUB_ENV
          echo "DEPLOYMENT_ENV=staging" >> $GITHUB_ENV

      - name: Deploy to staging server
        run: |
          echo "🚀 스테이징 환경에 배포 중..."
          # 실제 배포 스크립트 실행
          chmod +x deploy_staging.sh
          ./deploy_staging.sh

      - name: Health check
        run: |
          echo "🏥 배포 후 헬스체크..."
          sleep 30
          curl -f http://staging.dreamseed.com/healthz || exit 1

      - name: Run smoke tests
        run: |
          echo "🧪 스모크 테스트 실행..."
          python tests/smoke_tests.py --env=staging

  # 프로덕션 배포
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment: production
    needs: deploy-staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to production
        run: |
          echo "🚀 프로덕션 환경에 배포 중..."
          chmod +x deploy_production.sh
          ./deploy_production.sh

      - name: Production health check
        run: |
          echo "🏥 프로덕션 헬스체크..."
          sleep 60
          curl -f https://dreamseedai.com/healthz || exit 1

      - name: Run production tests
        run: |
          echo "🧪 프로덕션 테스트 실행..."
          python tests/production_tests.py

      - name: Notify deployment success
        run: |
          echo "✅ 프로덕션 배포 성공!"
          # Slack/이메일 알림 전송
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"🚀 DreamSeed 프로덕션 배포 완료!"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

  # 롤백 작업
  rollback:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    if: failure()
    environment: production
    steps:
      - name: Rollback to previous version
        run: |
          echo "🔄 이전 버전으로 롤백 중..."
          chmod +x rollback.sh
          ./rollback.sh

      - name: Verify rollback
        run: |
          echo "✅ 롤백 검증..."
          sleep 30
          curl -f https://dreamseedai.com/healthz || exit 1

      - name: Notify rollback
        run: |
          echo "⚠️ 롤백 완료 알림"
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"⚠️ DreamSeed 롤백 완료"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

