#!/usr/bin/env bash
set -euo pipefail

# =============================
# Go HTTP Instance Starter
# =============================

INSTANCE_NAME="${1:-go}"
INSTANCE_DIR="$(dirname "$0")"
PORT="${PORT:-{{ item.port | default(threader_go_port | default(threader_port)) }}}"
HOST="${HOST:-0.0.0.0}"

# =============================
# Logging
# =============================
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] [Go-$INSTANCE_NAME] $*" >&2
}

log "Starting Go HTTP instance: $INSTANCE_NAME"
log "Working directory: $INSTANCE_DIR"
log "Port: $PORT, Host: $HOST"

# =============================
# Go Setup
# =============================
cd "$INSTANCE_DIR"

# Create go.mod if missing
if [ ! -f "go.mod" ]; then
    log "Creating go.mod..."
    go mod init threader >/dev/null 2>&1 || true
fi

# Install dependencies and build
log "Installing Go dependencies and building..."
go mod tidy >/dev/null 2>&1 || true
go get {{ threader_go_requirements | join(' ') }} >/dev/null 2>&1 || true
go build -o threader . >/dev/null 2>&1 || true

# =============================
# Start Application
# =============================
log "Starting Go HTTP server on $HOST:$PORT"
exec env PORT="$PORT" HOST="$HOST" ./threader
